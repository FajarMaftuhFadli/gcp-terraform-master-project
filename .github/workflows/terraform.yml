name: Terraform

on:

  push:
    branches: main
    paths:
      - '**.tf'

  workflow_dispatch:
    inputs:
      operation:
        type: choice
        description: Operation
        options:
        - Linting
        - Plan
        - Apply
        - Destroy
      use-show:
        type: boolean
        description: terraform show
        default: false
      use-output:
        type: boolean
        description: terraform output
        default: false

env:
  TF_DIR: 'src'

jobs:

  Linting:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.inputs.operation == 'Linting'
    steps:
    - name: Checkout source code
      uses: actions/checkout@v4
      with:
        sparse-checkout: src
    - name: Cache plugin dir
      uses: actions/cache@v3
      with:
        path: ~/.tflint.d/plugins
        key: ubuntu-latest-tflint-${{ hashFiles('.tflint.hcl') }}
    - name: Setup TFLint
      uses: terraform-linters/setup-tflint@v3
      with:
        tflint_version: latest
    - name: Show version
      run: tflint --chdir=$TF_DIR --version
    - name: Init TFLint
      run: tflint --chdir=$TF_DIR --init
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Run TFLint
      run: tflint --chdir=$TF_DIR -f compact

  Terraforming:
    runs-on: ubuntu-latest
    if: github.event_name != 'push' || github.event.inputs.operation != 'Linting' || github.event.inputs.use-show || github.event.inputs.use-output
    env:
      TF_VAR_billing_account: '${{ secrets.TF_VAR_billing_account }}'
      TF_VAR_org_id: '${{ secrets.TF_VAR_org_id }}'
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        sparse-checkout: src
    - name: Authenticate with Google Cloud
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "<1.7.0"
    - name: Cache Terraform provider
      uses: terraform-cache/terraform-cache@v1
    - name: Terraform Init
      run: terraform -chdir=$TF_DIR init
    - name: Terraform Plan
      if: github.event.inputs.operation == 'Plan'
      run: terraform -chdir=$TF_DIR plan
    - name: Terraform Apply
      if: github.event.inputs.operation == 'Apply'
      run: terraform -chdir=$TF_DIR apply -auto-approve
    - name: Terraform Destroy
      if: github.event.inputs.operation == 'Destroy'
      run: terraform -chdir=$TF_DIR destroy -auto-approve
    - name: Terraform Show
      if: github.event.inputs.use-show
      run: terraform -chdir=$TF_DIR show
    - name: Terraform Output
      if: github.event.inputs.use-output
      run: terraform -chdir=$TF_DIR output
