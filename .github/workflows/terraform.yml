name: Terraform

on:

  push:
    branches: main
    paths:
      - '**.tf'

  workflow_dispatch:
    inputs:
      operation:
        type: choice
        description: Operation
        options:
        - None
        - Plan
        - Apply
        - Destroy
      use-lint:
        type: boolean
        description: Use linter
        default: true

jobs:

  TFLint:
    runs-on: ubuntu-latest
    if: github.event.inputs.use-lint
    steps:
    - name: Checkout source code
      uses: actions/checkout@v4
      with:
        sparse-checkout: |
          src
    - run: pwd
    - run: ls
    - name: Cache plugin dir
      uses: actions/cache@v3
      with:
        path: ~/.tflint.d/plugins
        key: ubuntu-latest-tflint-${{ hashFiles('.tflint.hcl') }}
    - name: Setup TFLint
      uses: terraform-linters/setup-tflint@v3
      with:
        tflint_version: latest
    - name: Show version
      run: tflint --version
    - name: Init TFLint
      run: tflint --init
      env:
        # https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/plugins.md#avoiding-rate-limiting
        GITHUB_TOKEN: ${{ github.token }}
    - name: Run TFLint
      run: tflint -f compact

  Terraforming:
    runs-on: ubuntu-latest
    needs: TFLint
    if: github.event.inputs.operation != 'None'
    env:
      TF_VAR_billing_account: '${{ secrets.TF_VAR_billing_account }}'
      TF_VAR_org_id: '${{ secrets.TF_VAR_org_id }}'
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        sparse-checkout: src
    - name: Authenticate with Google Cloud
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "<1.7.0"
    - name: Cache Terraform provider
      uses: terraform-cache/terraform-cache@v1
    - name: Terraform Init
      id: init
      run: terraform init
    - name: Terraform Plan
      id: plan
      if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event.inputs.operation == 'Plan'
      run: terraform plan
    - name: Terraform Apply
      id: apply
      if: github.event.inputs.operation == 'Apply'
      run: terraform apply
    - name: Terraform Destroy
      id: destroy
      if: github.event.inputs.operation == 'Destroy'
      run: terraform destroy
    - name: Terraform Show
      id: show
      run: terraform show
